JSX stands for JavaScript XML.
JSX allows us to write HTML in React.
JSX makes it easier to write and add HTML.

JSX allows us to write HTML elements in JavaScript and place them in the DOM without any createElement()  and/or appendChild() methods.

Example(With JSX)
const myelement = <h1>I Love JSX!</h1>;
ReactDOM.render(myelement, document.getElementById('root'));  //Here root is the classname of the div tag in app.js

Example(Without JSX)
const myelement = React.createElement('h1', {}, 'I do not use JSX!');
ReactDOM.render(myelement, document.getElementById('root'));

Expressions:-
-----------------------------------------------
With JSX you can write expressions inside curly braces { }.
The expression can be a React variable, or property, or any other valid JavaScript expression. 
JSX will execute the expression and return the result:

Example:-
const myelement = <h1>React is {5 + 5} times better with JSX</h1>;

Inserting a Large Block of HTML:-
-------------------------------------------------------------
To write HTML on multiple lines, put the HTML inside parentheses:

const myelement = (
  <ul>
    <li>Apples</li>
    <li>Bananas</li>
    <li>Cherries</li>
  </ul>
);

ReactDOM.render(myelement, document.getElementById('root'));

One Top Level Element:-
--------------------------------------------------------------
The HTML code must be wrapped in ONE top level element.
So if you like to write two headers, you must put them inside a parent element, like a div element.

Example:-
const myelement = (
  <div>
    <h1>I am a Header.</h1>
    <h1>I am a Header too.</h1>
  </div>
);

ReactDOM.render(myelement, document.getElementById('root'));

Elements Must be Closed:-
------------------------------------------------------------------
JSX follows XML rules, and therefore HTML elements must be properly closed.

Example:-
const myelement = <input type="text" />;

ReactDOM.render(myelement, document.getElementById('root'));

If the Html syntax is wrong then React will throw an error.

JSX Differences from HTML:-
-----------------------------------------------------------
class->className
for->htmlFor
onclick->onClick
tabindex->tabIndex

